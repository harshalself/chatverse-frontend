# Base Source API Documentation
# This file contains base source API paths and schemas to be integrated into the main Swagger documentation

paths:
  # ==========================================
  # BASE SOURCE ENDPOINTS
  # ==========================================
  /sources/agent/{agentId}:
    post:
      tags:
        - Base Sources
      summary: Create a new source for an agent
      description: Creates a new source for the specified agent (requires authentication)
      security:
        - bearerAuth: []
      parameters:
        - name: agentId
          in: path
          required: true
          description: Agent ID
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSourceDto"
            examples:
              create_source:
                summary: Create file source
                value:
                  agent_id: 1
                  source_type: "file"
                  name: "Important Document"
                  description: "A critical document for the chatbot"
      responses:
        "201":
          description: Source created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleSourceResponse"
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      tags:
        - Base Sources
      summary: Get all sources for an agent
      description: Retrieves all sources belonging to a specific agent (requires authentication)
      security:
        - bearerAuth: []
      parameters:
        - name: agentId
          in: path
          required: true
          description: Agent ID
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Sources retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllSourcesResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Agent not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /sources/{id}:
    put:
      tags:
        - Base Sources
      summary: Update source
      description: Updates an existing source (requires authentication)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Source ID
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSourceDto"
            examples:
              update_source:
                summary: Update source status
                value:
                  name: "Updated Document Name"
                  description: "Updated description"
                  status: "completed"
                  is_embedded: true
      responses:
        "200":
          description: Source updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleSourceResponse"
        "400":
          description: Invalid input data
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Source not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      tags:
        - Base Sources
      summary: Get source by ID
      description: Retrieves a specific source by its ID (requires authentication)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Source ID
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Source retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleSourceResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Source not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    delete:
      tags:
        - Base Sources
      summary: Delete source
      description: Deletes a source (requires authentication)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Source ID
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Source deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Source not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    BaseSource:
      type: object
      properties:
        id:
          type: integer
          description: Source unique identifier
          example: 1
        agent_id:
          type: integer
          description: ID of the agent this source belongs to
          example: 1
        source_type:
          type: string
          enum: [file, text, website, database, qa]
          description: Type of source
          example: "file"
        name:
          type: string
          description: Name/title of the source
          example: "Important Document"
        description:
          type: string
          nullable: true
          description: Optional description of the source
          example: "A critical document for the chatbot"
        status:
          type: string
          enum: [pending, processing, completed, failed]
          description: Processing status of the source
          example: "completed"
        is_embedded:
          type: boolean
          description: Whether the source content has been vectorized for embeddings
          example: true
        created_by:
          type: integer
          description: User ID who created this source
          example: 1
        created_at:
          type: string
          format: date-time
          description: Timestamp when the source was created
          example: "2025-07-30T14:33:39Z"
        updated_by:
          type: integer
          nullable: true
          description: User ID who last updated this source
          example: 1
        updated_at:
          type: string
          format: date-time
          description: Timestamp when the source was last updated
          example: "2025-07-30T14:33:39Z"
        is_deleted:
          type: boolean
          description: Whether the source is marked as deleted
          example: false
        deleted_by:
          type: integer
          nullable: true
          description: User ID who deleted this source
          example: null
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: Timestamp when the source was deleted
          example: null

    CreateSourceDto:
      type: object
      required:
        - agent_id
        - source_type
        - name
      properties:
        agent_id:
          type: integer
          description: ID of the agent this source belongs to
          example: 1
        source_type:
          type: string
          enum: [file, text, website, database, qa]
          description: Type of source
          example: "file"
        name:
          type: string
          description: Name/title of the source
          example: "Important Document"
        description:
          type: string
          description: Optional description of the source
          example: "A critical document for the chatbot"

    UpdateSourceDto:
      type: object
      properties:
        name:
          type: string
          description: Name/title of the source
          example: "Updated Document Name"
        description:
          type: string
          description: Optional description of the source
          example: "Updated description"
        status:
          type: string
          enum: [pending, processing, completed, failed]
          description: Processing status of the source
          example: "completed"
        is_embedded:
          type: boolean
          description: Whether the source content has been vectorized for embeddings
          example: true

    SingleSourceResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/BaseSource"
        message:
          type: string
          example: "Source retrieved successfully"

    AllSourcesResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/BaseSource"
        message:
          type: string
          example: "Sources retrieved successfully"
