# Text Source API Documentation
# This file contains text source API paths and schemas to be integrated into the main Swagger documentation

paths:
  /sources/text/agent/{agentId}:
    get:
      tags:
        - Text Sources
      summary: Get all text sources for an agent
      description: Retrieves all text sources for a given agent (requires authentication)
      security:
        - bearerAuth: []
      parameters:
        - name: agentId
          in: path
          required: true
          description: Agent ID
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Text sources retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AllTextSourcesResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Agent not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /sources/text/{id}:
    get:
      tags:
        - Text Sources
      summary: Get text source by ID
      description: Retrieves a specific text source by its ID (requires authentication)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Text Source ID
          schema:
            type: integer
            example: 1
      responses:
        "200":
          description: Text source retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleTextSourceResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Text source not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      tags:
        - Text Sources
      summary: Update text source
      description: Updates an existing text source (requires authentication)
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Text Source ID
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTextSourceDto"
            examples:
              update_text_source:
                summary: Update text source content
                value:
                  content: "This is updated text content for training."
      responses:
        "200":
          description: Text source updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleTextSourceResponse"
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Text source not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /sources/text:
    post:
      tags:
        - Text Sources
      summary: Create text source
      description: Creates a new text source (requires authentication)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTextSourceDto"
            examples:
              create_text_source:
                summary: Create text source
                value:
                  agent_id: 1
                  name: "Training Example Text"
                  description: "This is an example text source for training purposes"
                  content: "This is an example of a text source that can be used for training or reference."
      responses:
        "201":
          description: Text source created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SingleTextSourceResponse"
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    TextSource:
      type: object
      description: Complete text source with joined source and text_sources table data
      required:
        - id
        - agent_id
        - source_type
        - name
        - status
        - is_embedded
        - created_by
        - created_at
        - updated_at
        - is_deleted
        - source_id
        - content
      properties:
        # Fields from sources table
        id:
          type: integer
          description: Source ID (primary key from sources table)
          example: 1
        agent_id:
          type: integer
          description: ID of the agent this source belongs to
          example: 1
        source_type:
          type: string
          description: Type of source (always 'text' for text sources)
          example: "text"
        name:
          type: string
          description: Name of the source
          example: "Training Example Text"
        description:
          type: string
          nullable: true
          description: Description of the source
          example: "This is an example text source for training purposes"
        status:
          type: string
          description: Processing status of the source
          enum: [pending, processing, completed, failed]
          example: "pending"
        is_embedded:
          type: boolean
          description: Whether the source content has been vectorized
          example: false
        created_by:
          type: integer
          description: ID of user who created the source
          example: 1
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
          example: "2025-08-05T14:33:39Z"
        updated_by:
          type: integer
          nullable: true
          description: ID of user who last updated the source
          example: 1
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp
          example: "2025-08-05T14:33:39Z"
        is_deleted:
          type: boolean
          description: Whether the source is soft deleted
          example: false
        deleted_by:
          type: integer
          nullable: true
          description: ID of user who deleted the source
          example: null
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: Deletion timestamp
          example: null
        # Fields from text_sources table
        source_id:
          type: integer
          description: Reference to the source record (same as id for joined responses)
          example: 1
        content:
          type: string
          description: The actual text content
          example: "This is an example of a text source that can be used for training or reference."

    CreateTextSourceDto:
      type: object
      required:
        - agent_id
        - name
        - content
      properties:
        agent_id:
          type: integer
          description: ID of the agent this text source belongs to
          example: 1
        name:
          type: string
          description: Name of the text source
          example: "Training Example Text"
        description:
          type: string
          description: Optional description of the text source
          example: "This is an example text source for training purposes"
        content:
          type: string
          description: The actual text content
          example: "This is an example of a text source that can be used for training or reference."

    UpdateTextSourceDto:
      type: object
      properties:
        content:
          type: string
          description: Updated text content
          example: "This is updated text content."

    SingleTextSourceResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/TextSource"
        message:
          type: string
          example: "Text source retrieved successfully"

    AllTextSourcesResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/TextSource"
        message:
          type: string
          example: "Text sources retrieved successfully"

    DeleteResponse:
      type: object
      properties:
        message:
          type: string
          example: "Text source deleted successfully"
