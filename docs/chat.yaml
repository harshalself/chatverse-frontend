paths:
  /chat:
    post:
      security:
        - bearerAuth: []
      tags:
        - Chat
      summary: Process chat messages
      description: Processes chat messages and returns AI-generated responses (requires authentication)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatRequest"
            examples:
              chat_request:
                summary: Basic chat request
                value:
                  messages:
                    - role: user
                      content: "Hello, how are you?"
                  model: "meta-llama/llama-4-scout-17b-16e-instruct"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatResponse"
              examples:
                success:
                  summary: Successful chat response
                  value:
                    message: "I don't have access to that information."
                    model: "meta-llama/llama-4-scout-17b-16e-instruct"
        "400":
          description: Invalid message format
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                bad_request:
                  summary: Invalid request format
                  value:
                    status: 400
                    message: "Invalid message format"
        "429":
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                rate_limit:
                  summary: Rate limit exceeded
                  value:
                    status: 429
                    message: "Rate limit exceeded. Please try again later."
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                server_error:
                  summary: Internal server error
                  value:
                    status: 500
                    message: "Internal server error"

components:
  schemas:
    Message:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          enum: [user, assistant]
          description: Who sent the message
          example: "user"
        content:
          type: string
          description: The actual message content
          example: "What's your model?"
    ChatRequest:
      type: object
      required:
        - messages
      properties:
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"
          minItems: 1
          description: Array of message objects
        model:
          type: string
          description: The AI model to use (optional)
          enum:
            - "meta-llama/llama-4-scout-17b-16e-instruct"
            - "deepseek-r1-distill-llama-70b"
          default: "meta-llama/llama-4-scout-17b-16e-instruct"
          example: "meta-llama/llama-4-scout-17b-16e-instruct"
    ChatResponse:
      type: object
      required:
        - message
        - model
      properties:
        message:
          type: string
          description: AI-generated response message
          example: "I don't have access to that information."
        model:
          type: string
          description: The AI model that was used
          example: "meta-llama/llama-4-scout-17b-16e-instruct"
